<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>采购进货(老商品添加)</title>
    <link rel="stylesheet" href="/layui/css/layui.css" media="all">
    <script src="/layui/layui.js"></script>
    <script src="/layui/layui.all.js"></script>
    <script src="/JQuery/jquery-3.4.1.min.js"></script>
    <style>
        /*将表单的信息隐藏，边框，圆角边框*/
       .body-color{display: none;border:1px solid #000; height:485px;width: 898px;background-color:#EBEBEB;border-radius: 2px;}
        /*设置title的字体颜色，边框，字体*/
        body .demo-class .layui-layer-title{color:#35529E;}
        /*左边部分*/
        #addform-left{background-color:#EBEBEB;border:1px solid #9F9F9F;border-radius:2px;width:435px;height:auto;margin:8px 0 0 5px;display:inline-block;}
        #addform-left #lefttop-list{font-size: 13px;width:80px;margin-left:5px;margin-top:-8px;background-color:#fff;}
        #addform-left p{font-size: 12.5px;margin-left: 2px;}
        #addform-left p span{color:red;}
        #addform-left .lefttop-steptwo a{color:red;font-weight: bold;font-size:15px;margin-left:10px;text-decoration: underline;}
        /*搜索框*/
        .lefttop-search{margin-top:10px;}
        .lefttop-search .layui-input{width:120px;height:20px;border-color:#9F9F9F;border-radius:0;display: inline-block;}
        .lefttop-search .layui-btn{height: 25px;line-height: 25px;margin:-3px 0 0 10px;font-size: 12px;border-radius: 50px;}

        /*左边的选项卡部分*/
        .layui-tab{width:433px;}
        .layui-tab .layui-tab-title li{font-size: 12px;}
        /*右边部分*/
        #addform-right{background-color:#EBEBEB;border:1px solid #9F9F9F;border-radius:2px;width:435px;height:auto;margin:8px 5px 0 0;clear:both;float:right;display:inline-block;}
        #addform-right #righttop-list{font-size: 12px;width:55px;margin-left:5px;margin-top:-8px;background-color: #fff;}
        #addform-right .layui-btn{height: 22px;line-height: 22px;margin:10px 0 11px 20px;font-size: 12px;border-radius: 50px;}
    </style>
</head>
<body>
<!--<div class="site-demo-button" id="layerDemo" style="margin-bottom: 0;">
    <button data-method="offset" data-type="auto" class="layui-btn layui-btn-normal">老商品添加(F2)</button>
</div>-->
<!--<div id="addform">-->
    <!-- 左边部分-->
    <div id="addform-left">
        <p id="lefttop-list">查询商品列表</p>
        <p>
            <span>步骤一：</span>请输入商品编号或名称查询商品，查询到商品后添加到右边所选商品
        </p>
        <!--<p class="lefttop-steptwo">
            <span>步骤二：</span>如果是新的商品项目，即商品名称不在列表中，请点<a href="#" id="addNew-shop">添加新商品</a>
        </p>-->
        <p class="lefttop-search">
            输入商品编号或名称查询商品：
            <input id="searchInput" type="text" name="title" required lay-verify="required" autocomplete="off" class="layui-input" value="" autofocus="autofocus">

            <button class="layui-btn layui-btn-xs" id="join-product" data-type="getCheckData">加入所选商品(F8)</button>
        </p>
        <!--选项卡-->
        <div class="layui-tab layui-tab-card">
            <ul class="layui-tab-title">
                <li class="layui-this">商品清单</li>
                <li>商品列表</li>
                <li>最近进货</li>
            </ul>
            <div class="layui-tab-content" style="height: auto;background-color: #fff;">
                <!--商品清单-->
                <div class="layui-tab-item layui-show" style="margin: -18px 0 0 -8px;">
                    <table class="layui-hide" id="test" lay-filter="test"></table>
                </div>
                <!--商品列表-->
                <div class="layui-tab-item">
                    <!--左边树形-->
                    <div id="test9" class="demo-tree demo-tree-box"
                         style="background-color: #fff;display: inline-block;border:1px solid grey;margin:-8px;width: 150px; height:385px; overflow: scroll;" ></div>
                    <!--右边表格-->
                    <div style="background-color: #fff;float: right; clear: both;margin:-18px -8px 0 0 ;">
                        <table class="layui-hide" id="test-lefttwo" lay-filter="test"></table>
                    </div>
                </div>
                <!--最近进货-->
                <div class="layui-tab-item" style="background-color: #fff;margin: -18px 0 0 -8px;">
                    <table class="layui-hide" id="test-recently"></table>
                </div>
            </div>
        </div>
    </div>

    <!-- 右边部分-->
    <div id="addform-right">
        <p id="righttop-list">所选商品</p>
        <div style="margin-top: -10px;background-color: #fff;">
            <table class="layui-hide" id="test-right" lay-filter="tbCommodity"></table>
        </div>
        <!--按钮-->
            <button id="delete" type="button" class="layui-btn layui-btn-xs"  data-type="getCheckData">删除(Del)</button>
            <button id="right" type="button" class="layui-btn layui-btn-xs">确定(F5)</button>
            <button id="no" type="button" class="layui-btn layui-btn-xs">取消(F4)</button>

    </div>
<!--</div>-->

<script>
    //页面所选择的仓库ID
    var warID=parent.warID;
    //定义全局数组变量保存右边被选中数据表格数据
    var tableData=[];
    //全部变量赋值方法
    function tableLoad(checkData,num,max){
        //点击 单条添加
        if(num=="one") {
            if(tableData.length > 0){//判断全局数组是否有数据
                var states = false;//定义重复状态
                for(var y = 0; y < tableData.length; y++){//循环全局数组数据
                    if(checkData.data.comId == tableData[y].comId) {
                        states = true;//有重复改变重复状态为真
                        tableData[y].duo1=Number(tableData[y].duo1)+1;
                        if(tableData[y].duo1>max){
                            layer.msg('当前库存:'+max,{
                                title:'库存不足'
                            });
                            tableData[y].duo1=max;
                        }
                    }
                }
                if(!states){//判断不重复则将选中的数据插入全局数组中
                    checkData.data.duo1=1
                    tableData.push(checkData.data);
                }
            } else {//全局数组变量没有数据则直接把选中的数据赋给它
                checkData.data.duo1=1
                tableData[0] = checkData.data;
            }
            //按钮点击事件添加
        }else{
            if(tableData.length > 0){//判断全局数组是否有数据
                for(var i = 0; i < checkData.data.length; i++){//循环选中每条的数据
                    var states = false;//定义重复状态
                    for(var y = 0; y < tableData.length; y++){//循环全局数组数据
                        if(checkData.data[i].comId == tableData[y].comId){
                            states = true;//有重复改变重复状态为真
                            //有重复值数量＋1
                            tableData[y].duo1=Number(tableData[y].duo1)+1;

                        }
                    }
                    if(!states){//判断不重复则将选中的数据插入全局数组中
                        checkData.data.duo1=1
                        tableData.push(checkData.data[i]);
                    }
                }
            } else {//全局数组变量没有数据则直接把选中的数据赋给它
                for(var y = 0; y < checkData.data.length; y++){
                    checkData.data[y].duo1=1;
                }
                tableData = checkData.data;
            }
        }
    };
   //商品清单(根据输入框值模糊查询)
   $.ajax({
       url: "/getCommodityByNameOrId.action",
       type: "post",
       dataType: "json",
       //第一次模糊查询条件为空 查询全部商品(仓库ID)
       data: {"val":"","warID":warID},
       success: function (list) {
           if (list != null) {
               //传递参数给数据表格方法
               comTable(list);
               //监控输入框
               $("#searchInput").bind("input",function () {
                   $.ajax({
                       url: "/getCommodityByNameOrId.action",
                       type: "post",
                       dataType: "json",
                       //将输入框值和仓库id传入查
                       data: {"val":$(this).val(),"warID":warID},
                       success: function (list) {
                           if (list != null) {
                               //传递参数给数据表格方法
                               comTable(list);
                           }
                       },
                       error: function (data) {
                           console.info(data);
                       }
                   })
               })

           }
       },
       error: function (data) {
           console.info(data);
       }
   })
   //渲染商品清单表格方法
   function comTable(list) {
       layui.use('table', function () {
           var table = layui.table;
           table.render({
               elem: '#test'
               //使用layui数据表格的data属性将Ajax调用的后台数据绑定
               , data: list
               , title: '商品列表'
               , height:376
               , cols: [[
                    {type:'checkbox', fixed: 'left'}
                    ,{field: 'comId', width: 100, title: '商品编号',LAY_CHECKED:true}
                    ,{field: 'comName', width: 160, title: '商品名称'}
                    ,{field: 'comSimpleCode', width: 100, title: '简码'}
                    ,{field: 'comProduct', width: 120, title: '规格型号'}
                    ,{field: 'comBarCode', width: 140, title: '商品条码'}
                ]]
                , id: 'comsearch'
                , page: true
            });
            //监听行双击事件（双击事件为：rowDouble）
            table.on('rowDouble(test)', function(obj){
                //为其添加样式
                var flag= true;
                if(flag){
                    flag = false;
                }else{
                    flag = true;
                }
                //讲双击的行数据做参数 并带区分参数
                $.ajax({
                    url: "/IfNumBigRepertory.action",
                    type: "post",
                    dataType: "text",
                    data: {"comId": obj.data.comId,"warID":warID},
                    success: function (list) {
                        var max=parseInt(list);
                        tableLoad(obj,"one",max);
                        //渲染表格方法
                        comchoosedTable(tableData)
                    }
                })

            });
            //监听表格复选框选择
            table.on('checkbox(test)', function(obj){
                //添加样式
                if(obj.checked){
                    obj.tr.addClass('layui-bg-blue');// 添加选中样式
                }else {
                    obj.tr.removeClass('layui-bg-blue');// 移除选中样式
                }
            });
            var $ = layui.$, active = {
                getCheckData: function(){ //获取选中数据
                    var checkStatus = table.checkStatus('comsearch')
                        ,data = checkStatus.data;
                        tableLoad(checkStatus,"more",0);
                        //渲染表格方法
                        comchoosedTable(tableData)
                    }
                    /*table.reload('comsearch', {
                    })*/
                }
            $('#join-product').on('click', function(){
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });
        })
    }
    //商品列表树形结构
    $.ajax({
        type: "POST",
        url: "/searchCommodityParentType.action",
        success: function(msg){
            layui.use('tree', function(){
                var tree = layui.tree;
                //渲染
                var inst1 = tree.render({
                    elem: '#test9'  //绑定元素
                    ,data: msg
                    //,edit: ['add', 'update', 'del']
                    ,click: function(obj){
                        var catid=obj.data.catId
                        $.ajax({
                            url: "/searchInfoByClick.action",
                            type: "post",
                            dataType: "json",
                            //将输入框值和仓库id传入查
                            data: {"catid":catid,"warID":warID},
                            success: function (list) {
                                if (list != null) {
                                    //传递参数给数据表格方法
                                    comListTable(list);
                                }
                            }
                        })
                    }
                });

            });
        }
    });
    //2_2.左边列表(商品列表)
    function comListTable(msg) {
        layui.use('table', function(){
            var table = layui.table;
            table.render({
                elem: '#test-lefttwo'
                , data: msg
                ,id:"tableList"
                ,width:273
                ,height:376
                ,cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                ,cols: [[
                    {type:'checkbox', fixed: 'left'}
                    ,{field: 'comId', width: 100, title: '商品编号'}
                    , {field: 'comName', width: 160, title: '商品名称'}
                    , {field: 'comSimpleCode', width: 60, title: '简码'}
                    , {field: 'comProduct', width: 70, title: '规格型号'}
                    //, {field: 'cosColor', width: '69', title: '颜色'}
                    ,{field: 'comBarCode', width: "100", title: '商品条码'}

                ]]
                ,toolbar: false
                , page: true
            });
            //监听行双击事件（双击事件为：rowDouble）
            table.on('rowDouble(test-lefttwo)', function(obj){
                //为其添加样式
                var flag= true;
                if(flag){
                    obj.tr.find("div:eq(0)").addClass("layui-form-checked");
                    obj.tr.addClass("layui-bg-blue");
                    flag = false;
                }else{
                    obj.tr.find("div:eq(0)").removeClass("layui-form-checked");
                    flag = true;
                }
                //讲双击的行数据做参数 并带区分参数
                tableLoad(obj,"one");
                //渲染表格方法
                comchoosedTable(tableData)
            });
            //监听表格复选框选择
            table.on('checkbox(test-lefttwo)', function(obj){
                //添加样式
                if(obj.checked){
                    obj.tr.addClass('layui-bg-blue');// 添加选中样式
                }else {
                    obj.tr.removeClass('layui-bg-blue');// 移除选中样式
                }
            });
            var $ = layui.$, active = {
                getCheckData: function(){ //获取选中数据
                    var checkStatus = table.checkStatus('tableList')
                        ,data = checkStatus.data;

                    //将复选框选中的行数据做参数 并带区分参数
                    tableLoad(checkStatus,"more");
                    //渲染表格方法
                    comchoosedTable(tableData)
                    table.reload('tableList', {
                    })
                }
            };
            $('#join-product').on('click', function(){
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });
        });
    }

    //左边列表(最近进货)
   layui.use('table', function(){
        var table = layui.table;
       table.render({
           elem: '#test-recently'
           ,url:'/merchBillManager/searchRecentStockPurList.action'
           ,height:375
           ,width:429
           ,id:'timeList'
           ,cellMinWidth: 80
           ,cols: [[
               {type:'checkbox'} //LAY_CHECKED:true默认单选框选中
               ,{templet:'<div>{{d.commodity.comId}}</div>',width:100, title: '商品编号'}
               ,{templet:'<div>{{d.commodity.comName}}</div>',width:220,  title: '商品名称',sort: true}
               ,{field:'duo5', title: '单价'}
               ,{templet:'<div>{{d.commodity.comUnit}}</div>', title: '单位'}
               ,{templet:'<div>{{d.commodity.comProduct}}</div>',width:100, title: '规格'}
               ,{field:'redredchaseDate',templet:'<div>{{ layui.util.toDateString(d.redredchaseDate,"yyyy-MM-dd HH:mm:ss")}}</div>',width:180,  title: '进货日期'}
           ]], parseData: function (res, curr, count) { //res 即为原始返回的数据 //curr得到当前页码//count得到数据总量
               return {
                   "code": res.status, //解析接口状态
                   "msg": res.msg, //解析提示文本
                   "count": res.count, //解析数据长度
                   "data": res.row //解析数据列表
               }
           }
           , done: function (obj) {
               layer.closeAll();
           }
        });
        //监听表格复选框选择
        table.on('checkbox(test-recently)', function(obj){
           /* console.log(obj)*/
        });

       var $ = layui.$, active = {
           getCheckData: function(){ //获取选中数据
               var checkStatus = table.checkStatus('timeList')
                   ,data = checkStatus.data;
               /* layer.alert(JSON.stringify(data));*/
               console.log(data);
               //将复选框选中的行数据做参数 并带区分参数
               tableLoad(checkStatus,"more");
               //渲染表格方法
               comchoosedTable(tableData)
               table.reload('timeList', {
               })
           }
       };

        $('#join-product').on('click', function(){
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });
        //监听行单击事件（双击事件为：rowDouble）
        table.on('row(test-lefttwo)', function(obj){
            var data = obj.data;

            layer.alert(JSON.stringify(data), {
                title: '当前行数据：'
            });

            //标注选中样式
            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
        });
    });

    /*3.右边所选商品列表*/
   function comchoosedTable(list) {
   layui.use('table', function(){
       var table = layui.table,
       $=layui.jquery;
       table.render({
           elem: '#test-right'
           ,data:list
           ,height:456
           ,id:"tbCommodity"
           ,totalRow: true //开启合计行
           ,cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
           ,cols: [[ //表头
                 {type:'checkbox', fixed: 'left'}
               , {field: 'comId', width: 100, title: '商品编号', totalRowText: '合计'}
               ,{field: 'duo1', width: 80, title: '数量',sort: true,edit: 'text', totalRow: true}
               , {field: 'comName', width: 160, title: '商品名称'}
               , {field: 'comSimpleCode', width: 60, title: '简码'}
               , {field: 'comProduct', width: 100, title: '规格型号'}
               //, {field: 'cosColor', width: '69', title: '颜色'}
               ,{field: 'comBarCode', width: "100", title: '商品条码'}
           ]]
           ,toolbar: false
           ,page:true
           ,done:function () {
               //当表格有数据 回调将合计行小数点去除
               if(tableData.length>0){
                   var a = $(".layui-table-total div:eq(2)").html();
                   a = a.substr(0,a.indexOf("."));
                   $(".layui-table-total div:eq(2)").html(a);
               }
           }
       });
       //监听表格复选框选择
       table.on('checkbox(test-right)', function(obj){
           if(obj.checked){
               obj.tr.addClass('layui-bg-blue');// 添加选中样式
           }else {
               obj.tr.removeClass('layui-bg-blue');// 移除选中样式
           }
       });
       var $ = layui.$, active = {
           getCheckData: function(){ //获取选中数据
               var checkStatus = table.checkStatus('tbCommodity')
                   ,data = checkStatus.data;
               //删除选中全局数组变量数据
               layui.use('layer',function () {
                   layer.confirm('确认要删除吗？', {
                       btn : [ '确定', '取消' ]//按钮
                   }, function(index) {
                           deleteChoosedCom(checkStatus)
                           table.reload('tbCommodity',{data : tableData});
                           layer.close(index);
                   });
               })

           }
       };
       $('#delete').on('click', function(){
           var type = $(this).data('type');
           active[type] ? active[type].call(this) : '';
       });
       //监听单元格编辑
       table.on('edit(tbCommodity)', function(obj){
           var value = obj.value //得到修改后的值
               ,data = obj.data //得到所在行所有键值
               ,field = obj.field; //得到字段
           //获取编辑前的值
           var g=0;
           var a="";
           for(var i=0;i<tableData.length;i++){
               if(tableData[i].comId===data.comId){
                   a = $(".layui-table-body tr[data-index="+i+"] td[data-field='duo1'] .layui-table-cell").html();
                   g=i;
                   break;
               }
           }
          //判断数据类型
           if(!Number(value)) {
               //判断是否为0
               if(value==0){
                   for(var a=0;a<tableData.length;a++){
                       if(data.comId==tableData[a].comId){
                           tableData.splice(a,1);
                           break;
                       }
                   }

                   //重新渲染表格
                   comchoosedTable(tableData);
               }else{
                   layer.msg('请输入数字');
                   // 重点 赋值
                  tableData[g].duo1=a;
                  table.reload('tbCommodity', {
                       data:tableData
                   });
                   //重新渲染表格
                   //comchoosedTable(tableData);
               }

           }else{
               //异步通过商品id在库存表查询编辑后的数量是否大于库存
               console.log(warID);
               $.ajax({
                   url: "/IfNumBigRepertory.action",
                   type: "post",
                   dataType: "text",
                   data: {"comId": data.comId,"warID":warID},
                   success: function (list) {
                       if(parseInt(list)<parseInt(value)){
                           layer.msg('当前库存:'+list,{
                               title:'库存不足'
                           });
                           tableData[g].duo1=a;
                           table.reload('tbCommodity', {
                               data:tableData
                           });
                       }else{
                           //遍历全局变量
                           for(var i=0;i<tableData.length ;i++){
                               //改变编辑行在全局变量的数量
                               if(tableData[i].comId===data.comId){
                                   tableData[i].duo1=value;
                                   //重新渲染表格
                                   comchoosedTable(tableData);
                               }
                           }
                       }
                   }
               });
           }
       });
   });

   }
    //删除方法
    function deleteChoosedCom(checkData) {
        for(var i = 0; i < checkData.data.length; i++){//循环选中每条的数据
            for(var y = 0; y < tableData.length; y++){//循环全局数组数据
                if(checkData.data[i].comId == tableData[y].comId){
                    tableData.splice(y,1);
                }
            }
        }
    }

    //确定按钮 将全局变量保存传至父弹窗
    $('#right').on('click',function(){
        if(tableData.length!=0){
            parent.saledCom(tableData);
            //关闭当弹窗
            var index=parent.layer.getFrameIndex(window.name);
            parent.layer.close(index);
        }

    })

   $('#no').on('click',function(){
     /*  if(tableData.length==0){
           //关闭当弹窗
       }else {
           var i=0;
           layui.use('layer',function () {
               layer.confirm('是否保存数据', {
                   btn : [ '保存', '不保存' ]//按钮
               }, function(index) {
                   i++;
                   layer.close(index);
               });
           });
           if(i==0){

           }else{

           }
       } */
       var index=parent.layer.getFrameIndex(window.name);
       parent.layer.close(index);
    })

</script>
</body>
</html>