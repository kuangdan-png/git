<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link rel="stylesheet" href="layui/css/layui.css" media="all">
    <style>
        h2 {
            font-weight: bold;
            margin: 10px;
        }

        h3 {
            font-weight: bold;
            padding: 10px;
            width: 240px;
            text-align: center;
        }

        .center {
            width: 1120px;
            height: 410px;
            border: 1px solid gainsboro;
            padding: 10px;
            margin: 10px;
        }

        #addRolesFrom, #addAuthorityFrom {
            display: none;
            width: 400px;
            padding-top: 10px;
        }

        .rightStyle {
            height: 420px;
            width: 1060px;
        }

        .right {
            float: left;
            width: 340px;
            margin-left: 10px;
            border: 1px solid gray;
            height: 300px;
            margin-bottom: 10px;
        }

        .sheAuto {
            height: 258px;
            overflow-y: auto;
        }
    </style>
    <script src="layui/layui.js"></script>

    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看</a>
        <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>
    <script src="layui/layui.all.js"></script>
    <script src="JQuery/jquery-3.4.1.min.js"></script>
    <script src="js/authority.js" type="text/javascript"></script>
</head>
<body>
<header>
    <h2>权限设置</h2>
    <div class="layui-tab  layui-tab-card">
        <ul class="layui-tab-title">
            <li class="layui-this">角色设置</li>
            <li>权限设置</li>
            <li>分配权限</li>
        </ul>
        <div class="layui-tab-content">
            <div class="layui-tab-item layui-show">
                <div class="center">
                    <table class="layui-hide dataTable" id="rolesTable" lay-filter="testRolesTable"></table>
                </div>
            </div>
            <div class="layui-tab-item">
                <div class="center">
                    <table class="layui-hide dataTable" id="authTable" lay-filter="testAuthTable"></table>
                </div>
            </div>
            <div class="layui-tab-item">
                <div class="rightStyle">
                    <div class="right">
                        <h3>员工</h3>
                        <div class="sheAuto">
                            <div id="employ"></div>
                        </div>
                    </div>
                    <div class="right">
                        <h3>角色</h3>
                        <div class="sheAuto">
                            <div id="roles"></div>
                        </div>
                    </div>
                    <div class="right">
                        <h3>权限</h3>
                        <div class="sheAuto">
                            <div id="authority"></div>
                        </div>
                    </div>
                    <div>
                        <button type="button" id="ok" class="layui-btn">确定分配权限</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</header>

<div id="addRolesFrom">
    <form class="layui-form" lay-filter="example" id="rolesFrom">
        <div class="layui-form-item">
            <label class="layui-form-label">角色编号</label>

            <div class="layui-input-inline">
                <input type="text" name="rolNo" required width="100px" id="maxNo" autocomplete="off" disabled
                       class="layui-input">
            </div>

        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">角色名称：</label>
            <div class="layui-input-inline">
                <input type="text" name="rolName" required lay-verify="required" placeholder="请输入角色名称"
                       autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">是否禁用：</label>
            <div class="layui-input-inline">
                <input type="checkbox" name="rolStatus" id="rolStatus" lay-skin="primary"/>
            </div>
        </div>
        <div class=" layui-form-item">
            <label class="layui-form-label">创建时间：</label>
            <div class="layui-input-inline">
                <input type="text" name="rolCreatetime" class="layui-input" id="test5"
                       placeholder="yyyy-MM-dd HH:mm:ss">
            </div>
        </div>
        <div class=" layui-form-item">
            <label class="layui-form-label">描述：</label>
            <div class="layui-input-inline">
                <textarea name="rolDesc" required lay-verify="required" placeholder="请输入"
                          class="layui-textarea"></textarea>
            </div>
        </div>
        <div class="layui-form-item">
            <div class="layui-input-block">
                <button class="layui-btn" id="submit">提交</button>
                <button type="reset" class="layui-btn layui-btn-primary" id="reset">重置</button>
            </div>
        </div>
    </form>
</div>

<div id="addAuthorityFrom">
    <form class="layui-form" lay-filter="authorityExample" id="authorityFrom">
        <div class="layui-form-item">
            <label class="layui-form-label">权限编号</label>

            <div class="layui-input-inline">
                <input type="text" name="autNo" required width="100px" id="authorityMaxNo" autocomplete="off" disabled
                       class="layui-input">
            </div>

        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">权限名称：</label>
            <div class="layui-input-inline">
                <input type="text" name="autName" id="autName" required lay-verify="required" placeholder="请输入权限名称"
                       autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item layui-form">
            <label class="layui-form-label">父级权限：</label>
            <div class="layui-input-inline">
                <select name="autParentNo" id="authorityParent">
                    <option value="">请选择</option>
                </select>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">是否禁用：</label>
            <div class="layui-input-inline">
                <input type="checkbox" name="autStatus" id="autStatus" lay-skin="primary">
            </div>
        </div>
        <div class=" layui-form-item">
            <label class="layui-form-label">描述：</label>
            <div class="layui-input-inline">
                <textarea name="autDesc" required lay-verify="required" placeholder="请输入"
                          class="layui-textarea"></textarea>
            </div>
        </div>
        <div class="layui-form-item">
            <div class="layui-input-block">
                <button class="layui-btn" id="authoritySubmit">提交</button>
                <button type="reset" class="layui-btn layui-btn-primary">重置</button>
            </div>
        </div>
    </form>
</div>
<script type="text/javascript">
    layui.use(['tree', 'util', 'table', 'layer', 'laydate', 'form'], function () {
        var tree = layui.tree
            , layer = layui.layer
            , util = layui.util
            , form = layui.form;
        //模拟数据
        var layer = layui.layer;
        var table = layui.table;
        var $ = layui.$;
        var laydate = layui.laydate;


        table.render({
            elem: '#rolesTable'
            , url: '/authorityManager/searchRoleInfo.action'
            , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
            , toolbar: 'default'
            , id: 'rolesTable1'
            , cols: [[
                {type: 'checkbox'}
                , {field: 'rolNo', width: 140, title: '角色编号', align: 'center', sort: true}
                , {field: 'rolName', width: 160, title: '角色名称', align: 'center', sort: true}
                , {field: 'rolCreatetime', width: 200, title: '创建时间', align: 'center', sort: true}
                , {
                    field: 'rolStatus', width: 120, title: '状态', align: 'center', sort: true, templet: function (d) {
                        if (d.rolStatus == 0) {
                            return '启用'
                        } else {
                            return '禁用'
                        }
                    }
                }
                , {field: 'rolAuthoEmployNo', width: 160, title: '授权人', align: 'center', sort: true}
                , {field: 'rolDesc', width: 183, title: '描述', align: 'center', sort: true}
            ]], response: {
                statusCode: 200 //重新规定成功的状态码为 200，table 组件默认为 0
            }, parseData: function (res) { //将原始数据解析成 table 组件所规定的数据
                return {
                    "code": res.status, //解析接口状态
                    "msg": res.msg, //解析提示文本
                    "count": res.count, //解析数据长度
                    "data": res.row//解析数据列表
                };
            }
            , page: true //开启分页
            , height: 400
            , width: 1120
        });

        //获得权限信息
        table.render({
            elem: '#authTable'
            , url: '/authorityManager/searchAuthorityInfo.action'
            , cellMinWidth: 100 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
            , toolbar: 'default'
            , cols: [[
                {type: 'checkbox'}
                , {field: 'autNo', width: 200, title: '权限编号', align: 'center', sort: true}
                , {field: 'autName', width: 200, title: '权限名称', align: 'center', sort: true}
                , {field: 'autParentNo', width: 200, title: '一级权限', align: 'center', sort: true}
                , {
                    field: 'autStatus', width: 120, title: '状态', align: 'center', sort: true, templet: function (d) {
                        if (d.autStatus == 0) {
                            return '启用'
                        } else {
                            return '禁用'
                        }
                    }
                }, {field: 'autDesc', width: 200, title: '描述', align: 'center', sort: true}
            ]], response: {
                statusCode: 200 //重新规定成功的状态码为 200，table 组件默认为 0
            }, parseData: function (res) { //将原始数据解析成 table 组件所规定的数据
                return {
                    "code": res.status, //解析接口状态
                    "msg": res.msg, //解析提示文本
                    "count": res.count, //解析数据长度
                    "data": res.row//解析数据列表
                };
            }
            , page: true //开启分页
            , height: 340
            , width: 1120

        });



        //将表单中的按钮自动提交去除
        form.on('submit(example)', function (data) {
            //都返回
            return false;
        });

        //将表单中的按钮自动提交去除
        form.on('submit(authorityExample)', function (data) {
            //都返回
            return false;
        });

        //当点击reset按钮时，重置表单的最大编号
        $('#reset').click(function () {

            //1.获得最大编号
            $.post('/authorityManager/getRolesMaxNo.action',
                function (data) {

                    //赋值显示
                    $('#maxNo').val(data);
                });
        });

        //判断表单中的复选框是否选中
        function isChoose() {
            //判断复选框 rolStatus 是否选中
            if ($('#rolStatus').prop("checked")) {
                $('#rolStatus').val(1);
            } else {
                $('#rolStatus').val(0);
            }
            //判断复选框  autStatus  是否选中
            if ($('#autStatus').prop("checked")) {
                $('#autStatus').val(1);
            } else {
                $('#autStatus').val(0);
            }
        }

        function getobj(b) {
            var elms = $(b+" [name]"); //formid 包含name属性的所有元素
            var obj = {};
            $.each(elms, function (i, item) {
                var name = $(item).attr("name");
                obj[name] = "";
            });
            return obj;
        }

        //监听testRolesTable头工具栏事件
        table.on('toolbar(testRolesTable)', function (obj) {
            var checkStatus = table.checkStatus(obj.config.id)
                , data = checkStatus.data; //获取选中的数据
            //清空表单数据
            form.val("example", getobj("#rolesFrom"));

            //日期时间选择器
            laydate.render({
                elem: '#test5'//html代码中input的id值
                , type: 'datetime'
                , trigger: 'click' //自定义弹出控件的事件(类型：String，默认值：focus，如果绑定的元素非输入框，则默认事件为：click)-这里采用click弹出
                , value: new Date()
            });
            switch (obj.event) {
                case 'add':

                    //1.获得最大编号
                    $.post('/authorityManager/getRolesMaxNo.action',
                        function (data) {

                            //赋值显示
                            $('#maxNo').val(data);
                        });
                    //2.打开窗体
                    var index = layer.open({
                        type: 1
                        , title: '创建角色'
                        , content: $('#addRolesFrom') //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                        , area: ['400px', '450px']
                    });

                    //3.点击提交按钮
                    $('#submit').click(function () {

                        //表单取值
                        var data = form.val('example');

                        isChoose();

                        data.rolStatus = $('#rolStatus').val();
                        //将表单的data转换成json格式
                        var dataValue = JSON.stringify(data);

                        //提交表单
                        $.ajax({
                            type: "POST",
                            url: "/authorityManager/excuteAddRoles.action",
                            data: dataValue,
                            contentType: "application/json;charset=UTF-8",
                            success: function (data) {
                                //获得提交后的返回值,并判断是否成功新增数据
                                if (data == "succeed") {
                                    //关闭窗体，并提示
                                    layer.close(index);
                                    location.reload();
                                    layer.msg('添加成功');

                                } else {
                                    //不关闭窗体，并提示
                                    layer.msg('添加失败');
                                }
                            }
                        });
                    });
                    break;
                case 'update':
                    if (data.length === 0) {
                        layer.msg('请选择一行');
                    } else if (data.length > 1) {
                        layer.msg('只能同时编辑一个');
                    } else {
                        //得到角色编号
                        var rolNo = checkStatus.data[0].rolNo;
                        //1.得到角色编号，从数据库中查询该角色的数据
                        $.post('/authorityManager/getRolesByRolNo.action', {"rolNo": rolNo}, function (data) {
                            //表单赋值
                            form.val('example', {
                                "rolNo": data.rolNo // "name": "value"
                                , "rolName": data.rolName
                                , "rolStatus": data.rolStatus
                                , "rolCreatetime": data.rolCreatetime //复选框选中状态
                                , "rolDesc": data.rolDesc //开关状态
                            });
                            form.render();
                        });
                        //2.打开窗体
                        var index = layer.open({
                            type: 1
                            , title: '修改角色'
                            , content: $('#addRolesFrom') //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                            , area: ['400px', '450px']
                        });

                        //3.点击提交按钮
                        $('#submit').click(function () {
                            //表单取值
                            var data = form.val('example');

                            isChoose();
                            data.rolStatus = $('#rolStatus').val();

                            //将表单的data转换成json格式
                            var dataValue = JSON.stringify(data);

                            //提交表单
                            $.ajax({
                                type: "POST",
                                url: "/authorityManager/updateRolesInfo.action",
                                data: dataValue,
                                contentType: "application/json;charset=UTF-8",
                                success: function (data) {
                                    //获得提交后的返回值,并判断是否成功新增数据
                                    if (data == "succeed") {

                                        location.reload();
                                        //关闭窗体，并提示
                                        layer.close(index);
                                        layer.msg('修改成功');
                                    } else {
                                        //不关闭窗体，并提示
                                        layer.msg('添加失败');
                                    }
                                }
                            });
                        });
                    }
                    break;
                case 'delete':
                    if (data.length === 0) {
                        layer.msg('请选择一行');
                    } else {
                        var data = checkStatus.data;
                        var string = "";
                        for (var i = 0; i < data.length; i++) {
                            string += data[i].rolNo + ","
                        }
                        var b = string.substring(0, string.length - 1);
                        layer.confirm('确定要将' + b + '设置为禁用？', {title: '设置角色禁用操作'}, function (index) {
                            $.post('/authorityManager/deleteRolesInfo.action', {"rolNo": b},
                                function (data) {
                                    //获得提交后的返回值,并判断是否成功新增数据
                                    if (data == "succeed") {
                                        location.reload();
                                        layer.msg('设置成功');
                                    } else {
                                        //不关闭窗体，并提示
                                        layer.msg('设置失败');
                                    }
                                });
                        }, function (index) {
                            layui.msg('取消操作')
                        });
                    }
                    break;
            }
        });

        //监听testAuthTable头工具栏事件
        table.on('toolbar(testAuthTable)', function (obj) {
            var checkStatus = table.checkStatus(obj.config.id)
                , data = checkStatus.data; //获取选中的数据
            switch (obj.event) {
                case 'add':
                    //1.获得最大编号
                    $.post('/authorityManager/getAuthorityMaxNo.action',
                        function (data) {
                            //赋值显示
                            $('#authorityMaxNo').val(data);
                        });
                    //2.打开窗体
                    var index = layer.open({
                        type: 1
                        , title: '新建权限'
                        , content: $('#addAuthorityFrom') //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                        , area: ['400px', '450px']
                    });

                    //3.加载父级权限自动获取下拉框
                    $.ajax({
                        url: '/authorityManager/searchAuthority.action',
                        dataType: 'json',
                        data: {'state': 0},	//查询状态为正常的所有机构类型
                        type: 'post',
                        success: function (data) {
                            $.each(data, function (index, item) {
                                // 下拉菜单里添加元素
                                $('#authorityParent').append(new Option(item.autName, item.autNo));
                            });
                            layui.form.render("select");
                        }
                    });
                    //4.点击提交按钮

                    $('#authoritySubmit').click(function () {
                        isChoose();
                        data.autStatus = $('#autStatus').val();
                        //获得当前输入的权限名称
                        var authorityName = $("#autName").val();
                        //获得选择的父类
                        var authorityParentName = $("#authorityParent").val();

                        if (authorityParentName != '') {
                            layer.confirm('您确定要在' + authorityParentName + '中增加权限' + authorityName + '?', {title: '提交权限操作'}, function (index) {
                                layer.close(index);
                                //表单取值
                                var data = form.val('authorityExample');
                                //将角色的状态设置值
                                if (data.autStatus == '0') {
                                    data.autStatus = 0;
                                } else {
                                    data.autStatus = 1;
                                }

                                //将表单的data转换成json格式
                                var dataValue = JSON.stringify(data);

                                //提交表单
                                $.ajax({
                                    type: "POST",
                                    url: "/authorityManager/insertAuthority.action",
                                    data: dataValue,
                                    contentType: "application/json;charset=UTF-8",
                                    success: function (data) {

                                        //获得提交后的返回值,并判断是否成功新增数据
                                        if (data == "succeed") {
                                            //关闭窗体，并提示
                                            layer.close(index);
                                            layer.msg('添加成功');

                                        } else {
                                            //不关闭窗体，并提示
                                            layer.msg('添加失败');
                                        }
                                    }
                                });
                            })
                        } else {
                            //表单取值
                            var data = form.val('authorityExample');

                            //将角色的状态设置值
                            if (data.autStatus == '0') {
                                data.autStatus = 0;
                            } else {
                                data.autStatus = 1;
                            }

                            //将表单的data转换成json格式
                            var dataValue = JSON.stringify(data);

                            //提交表单
                            $.ajax({
                                type: "POST",
                                url: "/authorityManager/insertAuthority.action",
                                data: dataValue,
                                contentType: "application/json;charset=UTF-8",
                                success: function (data) {
                                    //获得提交后的返回值,并判断是否成功新增数据
                                    if (data == "succeed") {
                                        //关闭窗体，并提示
                                        layer.close(index);
                                        layer.msg('添加成功');
                                    } else {
                                        //不关闭窗体，并提示
                                        layer.msg('添加失败');
                                    }
                                }
                            });
                        }
                    });
                    break;
                case 'update':
                    if (data.length === 0) {
                        layer.msg('请选择一行');
                    } else if (data.length > 1) {
                        layer.msg('只能同时编辑一个');
                    } else {
                        var autNo = checkStatus.data[0].autNo;
                        //1.获得最大编号
                        $.post('/authorityManager/getAuthorityByAutNo.action', {"autNo": autNo}, function (data) {
                            //表单赋值
                            form.val('authorityExample', {
                                "autNo": data.autNo // "name": "value"
                                , "autName": data.autName
                                , "autStatus": data.autStatus
                                , "autParentNo": data.autParentNo //复选框选中状态
                                , "autDesc": data.autDesc //开关状态
                            });
                            //2.加载父级权限自动获取下拉框
                            $.ajax({
                                url: '/authorityManager/searchAuthority.action',
                                dataType: 'json',
                                data: {'state': 0},	//查询状态为正常的所有机构类型
                                type: 'post',
                                success: function (data) {
                                    $.each(data, function (index, item) {
                                        // 下拉菜单里添加元素
                                        $('#authorityParent').append(new Option(item.autName, item.autNo));
                                        if ($('#authorityParent option').val() == data.autParentNo) {
                                            $('#authorityParent option').attr('selected', 'selected')
                                        }
                                    });
                                    layui.form.render("select");
                                }
                            });
                            form.render();
                        });
                        //2.打开窗体
                        var index3 = layer.open({
                            type: 1
                            , title: '创建权限'
                            , content: $('#addAuthorityFrom') //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                            , area: ['400px', '450px']
                        });
                        //3.点击提交
                        $('#authoritySubmit').click(function () {
                            //表单取值
                            var data = form.val('authorityExample');

                            isChoose();
                            data.autStatus = $('#autStatus').val();

                            //将表单的data转换成json格式
                            var dataValue = JSON.stringify(data);

                            //提交表单
                            $.ajax({
                                type: "POST",
                                url: "/authorityManager/updateAuthority.action",
                                data: dataValue,
                                contentType: "application/json;charset=UTF-8",
                                success: function (data) {

                                    //获得提交后的返回值,并判断是否成功新增数据
                                    if (data == "succeed") {
                                        //关闭窗体，并提示
                                        layer.close(index3);
                                        layer.msg('添加成功');
                                    } else {
                                        //不关闭窗体，并提示
                                        layer.msg('添加失败');
                                    }
                                }
                            });
                        });
                    }
                    break;
                case 'delete':
                    if (data.length === 0) {
                        layer.msg('请选择一行');
                    } else {
                        var data = checkStatus.data;
                        var string = "";
                        for (var i = 0; i < data.length; i++) {
                            string += data[i].autNo + ","
                        }
                        var b = string.substring(0, string.length - 1);
                        layer.confirm('确定要将' + b + '设置为禁用？', {title: '设置角色禁用操作'}, function (index) {
                            $.post('/authorityManager/deleteAuthorityInfo.action', {"autNo": b},
                                function (data) {
                                    //获得提交后的返回值,并判断是否成功新增数据
                                    if (data == "succeed") {
                                        layer.msg('设置成功');
                                    } else {
                                        //不关闭窗体，并提示
                                        layer.msg('设置失败');
                                    }
                                });
                        }, function (index) {
                            layui.msg('取消操作')
                        });
                    }
                    break;
            }
            // 结束时清空表单内容
            $("#addAuthorityFrom")[0].reset();
            layui.form.render();
            location.reload();
        });

        var employees = [];
        //获得员工信息
        $.ajax({
            type: "POST",
            url: "/authorityManager/searchEmployees.action",
            success: function (msg) {
                var count = 0;
                var inst1 = tree.render({
                    elem: '#employ'  //绑定元素
                    , data: msg
                    , showCheckbox: true
                    , oncheck: function (obj) {
                        var b = true;
                        if (obj.checked == true) {
                            for (var i = 0; i < employees.length; i++) {
                                if (employees[i].id == obj.data.id) {
                                    b = false;
                                    break;
                                }
                            }
                            if (b != false) {
                                employees.push(obj.data);
                            }
                        }else{
                            for (var i = 0; i < employees.length; i++) {
                                if (employees[i].id == obj.data.id) {
                                    employees.splice(i,1)
                                    break;
                                }
                            }
                        }
                    }
                });
            }
        });

        var role = [];
        //获得角色信息
        $.ajax({
            type: "POST",
            url: "/authorityManager/searchRoles.action",
            success: function (msg) {
                //角色
                var inst2 = tree.render({
                    elem: '#roles'  //绑定元素
                    , data: msg
                    , showCheckbox: true
                    , oncheck: function (obj) {
                        var b = true;
                        if (obj.checked == true) {
                            for (var i = 0; i < role.length; i++) {
                                if (role[i].id == obj.data.id) {
                                    b = false;
                                    break;
                                }
                            }
                            if (b != false) {
                                role.push(obj.data);
                            }
                        }else{
                            for (var i = 0; i < role.length; i++) {
                                if (role[i].id == obj.data.id) {
                                    role.splice(i,1)
                                    break;
                                }
                            }
                        }
                    }
                });
            }
        });

        var authority = [];
        //获得权限信息
        $.ajax({
            type: "POST",
            url: "/authorityManager/searchAuthoritys.action",
            success: function (msg) {
                var inst3 = tree.render({
                    elem: '#authority'  //绑定元素
                    , data: msg
                    , showCheckbox: true
                    , oncheck: function (obj) {
                        var b = true;
                        if (obj.checked == true) {
                            for (var i = 0; i < authority.length; i++) {
                                if (authority[i].id == obj.data.id) {
                                    b = false;
                                    break;
                                }
                            }
                            if (b != false) {
                                authority.push(obj.data);
                            }
                        }else{
                            for (var i = 0; i < authority.length; i++) {
                                if (authority[i].id == obj.data.id) {
                                    authority.splice(i,1)
                                    break;
                                }
                            }
                        }
                    }
                });
            }
        });

        //点击确定分配权限
        $('#ok').click(function () {

            $.ajax({
                type: "POST",
                url: "/authorityManager/getRoleInfo.action",
                data: JSON.stringify(role),
                contentType: "application/json;charset=UTF-8"
            });

            $.ajax({
                type: "POST",
                url: "/authorityManager/getEmployees.action",
                data: JSON.stringify(employees),
                contentType: "application/json;charset=UTF-8"
            });

            $.ajax({
                type: "POST",
                url: "/authorityManager/setAuthority.action",
                data: JSON.stringify(authority),
                contentType: "application/json;charset=UTF-8",
                success: function (l) {
                    if(l=="success"){
                        console.log(l + "cfgvbhnjmk");
                        layer.msg('权限分配成功');
                        tree.reload('employ', {});
                        tree.reload('roles', {});
                        tree.reload('authority', {});

                    }
                }
            });
        });
    });
</script>
</body>

</html>